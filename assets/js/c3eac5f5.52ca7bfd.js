"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[694],{4137:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>C});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=t.createContext({}),l=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):a(a({},r),e)),n},p=function(e){var r=l(e.components);return t.createElement(s.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},f=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,C=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return n?t.createElement(C,a(a({ref:r},p),{},{components:n})):t.createElement(C,a({ref:r},p))}));function C(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[d]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=n[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3825:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var t=n(7462),o=(n(7294),n(4137));const i={sidebar_position:5},a="Certificate issuance diagram",c={unversionedId:"diagram",id:"diagram",title:"Certificate issuance diagram",description:"Here is a schema that present the ACME protocol flow:",source:"@site/docs/diagram.md",sourceDirName:".",slug:"/diagram",permalink:"/docs/diagram",draft:!1,editUrl:"https://github.com/pierre42100/ACMEresponder/tree/master/docs/docs/diagram.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"For developers",permalink:"/docs/dev"},next:{title:"Technical choices",permalink:"/docs/tech_choices"}},s={},l=[],p={toc:l},d="wrapper";function u(e){let{components:r,...n}=e;return(0,o.kt)(d,(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"certificate-issuance-diagram"},"Certificate issuance diagram"),(0,o.kt)("p",null,"Here is a schema that present the ACME protocol flow:"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    Note over ACMEResponder, Client: Before each exchange\n    Client->>ACMEResponder: Get routes directory\n    Client->>ACMEResponder: Request nonce\n    ACMEResponder--\x3e>Client: Nonce\n\n    Note over Client,ACMEResponder: Before first certificate issuance\n    Client->>ACMEResponder: Request account creation\n    ACMEResponder--\x3e>Client: Account ID\n\n    Note over Client,ACMEResponder: Certificate issuance\n    Client->>ACMEResponder: Create new order\n    ACMEResponder--\x3e>Client: Order ID\n\n    Client->>ACMEResponder: Request authorization challenge information\n    ACMEResponder--\x3e>Client: Challenge ID\n\n    Client->>Server: Put challenge on server\n\n    Client->>ACMEResponder: Ask for challenge validation\n    ACMEResponder->>Server: Ask for challenge\n    Server --\x3e> ACMEResponder: Challenge information\n\n    Client->>ACMEResponder: Check if order requirements were fullfilled\n    ACMEResponder--\x3e>Client: Order validation status\n\n    Client->>ACMEResponder: Submit CSR\n    ACMEResponder->>ACMEResponder: Sign CSR\n    ACMEResponder--\x3e>Client: Certificate ID\n\n    Client->>ACMEResponder: Request certificate\n    ACMEResponder--\x3e>Client: Certificate, in PEM format\n"}))}u.isMDXComponent=!0}}]);